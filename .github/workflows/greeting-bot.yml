name: Greeting Bot

on:
  issues:
    types: [opened, closed]  # Trigger on both opened and closed events
  pull_request:
    types: [opened]

jobs:
  greet:
    runs-on: ubuntu-latest
    steps:
      - name: Greet User
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue || context.payload.pull_request;
            const user = issue.user.login;
            const emoji = 'ðŸ˜Š';
            
            // For when user writes an issue
            const issueMessage = `ðŸ‘‹ Hello @${user}! Thank you for opening this issue titled "**${issue.title}**"! We're excited to see your contribution! ðŸš€\n\nPlease ensure the following:\n1. Be respectful. ðŸ˜Š\n2. Follow the contribution guidelines.\n\nHappy coding! ðŸŽ‰`;
            
            // For when user makes a pull request
            const pullRequestMessage = `ðŸ‘‹ Hello @${user}! Thank you for submitting this pull request titled "**${issue.title}**"! We're looking forward to reviewing your changes! ðŸš€\n\nPlease make sure:\n1. You adhere to our code of conduct. ðŸ˜Š\n2. Follow the contribution guidelines.\n\nHappy coding! ðŸŽ‰`;

            const message = context.payload.issue ? issueMessage : pullRequestMessage;

            await github.issues.createComment({
              ...context.repo,
              issue_number: issue.number,
              body: message
            });

  congratulate:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'  # Only run if the issue is closed
    steps:
      - name: Congratulate Contributor
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue;
            const user = issue.user.login;
            const congratulatoryMessage = `ðŸŽ‰ Congratulations @${user}! Your issue titled "**${issue.title}**" has been closed! Thank you for your contribution! We appreciate your efforts and look forward to your future contributions! ðŸš€`;

            await github.issues.createComment({
              ...context.repo,
              issue_number: issue.number,
              body: congratulatoryMessage
            });
